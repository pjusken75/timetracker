name: Deploy TimeTracker to Azure

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.x'
  NODE_VERSION: '18'

jobs:
  # Frontend Build and Test
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src/web
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ./src/web/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Lint code
      run: npm run lint

    - name: Type check
      run: npm run type-check

    - name: Build application
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: ./src/web/dist

  # Backend Build and Test
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src/api
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build application
      run: dotnet build --configuration Release --no-restore

    - name: Run tests
      run: dotnet test --configuration Release --no-build --verbosity normal

    - name: Publish application
      run: dotnet publish --configuration Release --output ./publish --no-build

    - name: Upload publish artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-build
        path: ./src/api/publish

  # Infrastructure Validation
  infrastructure:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Azure CLI Login
      if: github.event_name != 'pull_request'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Validate Bicep template
      run: |
        az bicep build --file main.bicep
        echo "âœ… Bicep template is valid"

    - name: What-if deployment (Development)
      if: github.event_name != 'pull_request' && github.ref != 'refs/heads/main'
      run: |
        az deployment group what-if \
          --resource-group rg-timetracker-dev \
          --template-file main.bicep \
          --parameters @parameters.dev.json

    - name: What-if deployment (Production)
      if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
      run: |
        az deployment group what-if \
          --resource-group rg-timetracker-prod \
          --template-file main.bicep \
          --parameters @parameters.prod.json

  # Deploy to Development
  deploy-dev:
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    needs: [frontend, backend, infrastructure]
    runs-on: ubuntu-latest
    environment: development
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download frontend artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: ./frontend-build

    - name: Download backend artifacts
      uses: actions/download-artifact@v4
      with:
        name: backend-build
        path: ./backend-build

    - name: Azure CLI Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Infrastructure
      working-directory: ./infrastructure
      run: |
        az deployment group create \
          --resource-group rg-timetracker-dev \
          --template-file main.bicep \
          --parameters @parameters.dev.json

    - name: Deploy API to App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_API_APP_NAME_DEV }}
        package: ./backend-build

    - name: Deploy Frontend to Static Web App
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_DEV }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "./frontend-build"
        skip_app_build: true

  # Deploy to Production
  deploy-prod:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [frontend, backend, infrastructure]
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download frontend artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: ./frontend-build

    - name: Download backend artifacts
      uses: actions/download-artifact@v4
      with:
        name: backend-build
        path: ./backend-build

    - name: Azure CLI Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Infrastructure
      working-directory: ./infrastructure
      run: |
        az deployment group create \
          --resource-group rg-timetracker-prod \
          --template-file main.bicep \
          --parameters @parameters.prod.json

    - name: Deploy API to App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_API_APP_NAME_PROD }}
        package: ./backend-build

    - name: Deploy Frontend to Static Web App
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_PROD }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "./frontend-build"
        skip_app_build: true

    - name: Run Database Migrations
      run: |
        # Add database migration commands here
        echo "Running database migrations..."